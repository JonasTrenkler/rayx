name: testUbuntu

on:
  push:
    branches:
      - '**'     # Run on all branches
    tags-ignore:
      - 'v*'     # Ignore tag pushes matching 'v*'
  pull_request:
    branches:
      - '**'     # Run for all pull requests

env:
  BUILD_TYPE: Release

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Make some space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/az
          df -h

      - name: Install dependencies
        run: |
          sudo wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.224-focal.list https://packages.lunarg.com/vulkan/1.3.224/lunarg-vulkan-1.3.224-focal.list
          sudo apt update --yes
          sudo apt install --yes vulkan-sdk xorg-dev cmake libgtk-3-dev libdbus-1-dev libboost-dev

      - name: Install Cuda
        uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: '12.3.2'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DWERROR=YES -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DRAYX_REQUIRE_CUDA=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run
        working-directory: ${{github.workspace}}
        run: |
          ./build/bin/release/rayx -x -c -m 1 -i Intern/rayx-core/tests/input/BoringImagePlane.rml
          git checkout -- Intern/rayx-core/tests/input/BoringImagePlane.csv

      - name: Test
        working-directory: ${{github.workspace}}/build/bin/release
        run: ./rayx-core-tst -x

      - name: CPack
        working-directory: ${{github.workspace}}/build
        run: cpack -G DEB

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RAYX
          path: ${{github.workspace}}/build/RAYX-*.*.*-Linux.deb

